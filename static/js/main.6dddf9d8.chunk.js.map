{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardsList","monsters","map","el","SearchBox","placeholder","handleChange","type","onChange","App","eventfun","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAEnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCTXC,EAAY,SAACR,GAExB,OACE,qBAAKC,UAAU,YAAf,SAEGD,EAAMS,SAASC,KAAI,SAACC,GAAD,OACnB,cAAC,EAAD,CAAMR,QAAUQ,GAAWA,EAAGP,UCNxBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBACEC,KAAK,OACLd,UAAU,SACVY,YAAaA,EAEbG,SAAUF,MCiECG,EArEf,kDACE,aAAe,IAAD,8BACZ,gBAeFC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALH,EADhB,qDAWE,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEX,SAAUoB,SAdjD,oBAsBE,WACE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,YAEZU,EAAmBtB,EAASuB,QAAO,SAACrB,GACxC,OAAOA,EAAGL,KAAK2B,cAAcC,SAASb,EAAYY,kBAGpD,OACE,sBAAKhC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEY,YAAY,kBAOZC,aAAcgB,KAAKZ,WAErB,cAAC,EAAD,CAAWT,SAAUsB,WA1C7B,GAAyBI,aCOVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6dddf9d8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => {\n  // console.log(\"props here\", props);\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport {Card} from './../card/card.component'\nexport const CardsList = (props) => {\n  // console.log(\"props here in card list\", props);\n  return (\n    <div className=\"card-list\">\n        \n      {props.monsters.map((el) => (\n       <Card monster ={el} key = {el.id} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({placeholder ,handleChange}) => (\n  <input\n    type=\"text\"\n    className=\"search\"\n    placeholder={placeholder}\n    // onChange={this.eventfun}\n    onChange={handleChange\n    }\n  />\n);\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardsList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search box/search-box.component\";\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n    // this.eventfun = this.eventfun.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  eventfun = (event)=> {\n    this.setState({ searchField: event.target.value });\n    // console.log(state)\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((el) => {\n      return el.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          // handleChange={(e) =>\n          //   this.setState({ searchField: e.target.value }, () =>\n          //     console.log(\"state tracker\", this.state)\n          //   )\n          // }\n\n          handleChange={this.eventfun}\n        ></SearchBox>\n        <CardsList monsters={filteredMonsters}></CardsList>\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}